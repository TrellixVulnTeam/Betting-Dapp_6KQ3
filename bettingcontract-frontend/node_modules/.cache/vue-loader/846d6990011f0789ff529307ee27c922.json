{"remainingRequest":"/Users/tombeck/Desktop/SmartContracts/BettingContractProject/bettingcontract-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tombeck/Desktop/SmartContracts/BettingContractProject/bettingcontract-frontend/src/components/Perfrom-Bet-Decision.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tombeck/Desktop/SmartContracts/BettingContractProject/bettingcontract-frontend/src/components/Perfrom-Bet-Decision.vue","mtime":1628862097295},{"path":"/Users/tombeck/Desktop/SmartContracts/BettingContractProject/bettingcontract-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tombeck/Desktop/SmartContracts/BettingContractProject/bettingcontract-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tombeck/Desktop/SmartContracts/BettingContractProject/bettingcontract-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tombeck/Desktop/SmartContracts/BettingContractProject/bettingcontract-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgV2ViMyBmcm9tICd3ZWIzJzsKaW1wb3J0IEJldHRpbmdDb250cmFjdCBmcm9tICcuLi9hYmlzL0JldHRpbmdDb250cmFjdC5qc29uJzsKCmV4cG9ydCBkZWZhdWx0IHsKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFjY291bnQ6ICcweDAnLAogICAgICBhZG1pbjogJzB4MCcsCiAgICAgIGN1cnJlbnRCYWxhbmNlOiAwLAogICAgICBiZXR0aW5nQ29udHJhY3RBYmk6IDAsCiAgICB9OwogIH0sCgogIGFzeW5jIGJlZm9yZU1vdW50KCl7CiAgICAgYXdhaXQgdGhpcy5pbXBvcnRTbWFydENvbnRyYWN0KCk7CiAgfSwgIAoKCiAgbWV0aG9kczp7CiAgICBwZXJmb3JtQmV0RGVjaXNpb246IGFzeW5jIGZ1bmN0aW9uKCkgewoKICAgICAgY29uc3QgQk4gPSByZXF1aXJlKCdibi5qcycpOwoKICAgICAgaWYoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIlBlcmZvcm1EZWNpc2lvbkJldElkQm94IikudmFsdWUgIT0gIiIgJiYgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIlBlcmZvcm1EZWNpc2lvbldpbm5lckFkZHJlc3NCb3giKS52YWx1ZSAhPSAiIiAmJiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiUGVyZm9ybURlY2lzaW9uQmV0SWRCb3giKS52YWx1ZSA+PSAwKSB7CgogICAgICAgIHZhciB0aGlyZFBhcnR5OwogICAgICAgIGF3YWl0IHRoaXMuYmV0dGluZ0NvbnRyYWN0QWJpLm1ldGhvZHMuZ2V0QmV0VGhpcmRQYXJ0eShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiUGVyZm9ybURlY2lzaW9uQmV0SWRCb3giKS52YWx1ZSkuY2FsbCgpLnRoZW4ocmVzdWx0ID0+IHRoaXJkUGFydHkgPSByZXN1bHQpOwoKICAgICAgICBpZih0aGlzLmFjY291bnQgPT09IHRoaXJkUGFydHkpewoKICAgICAgICAgIHZhciB2YWx1ZVRvR2l2ZTsKICAgICAgICAgIGF3YWl0IHRoaXMuYmV0dGluZ0NvbnRyYWN0QWJpLm1ldGhvZHMuZ2V0QmV0QW1vdW50KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJQZXJmb3JtRGVjaXNpb25CZXRJZEJveCIpLnZhbHVlKS5jYWxsKCkudGhlbihmdW5jdGlvbihyZXN1bHQpIHt2YWx1ZVRvR2l2ZSA9IG5ldyBCTihyZXN1bHQpLm11bChuZXcgQk4oMikpfSk7CiAgICAgIAogICAgICAgICAgCiAgICAgICAgICB0aGlzLmJldHRpbmdDb250cmFjdEFiaS5tZXRob2RzLnBlcmZvcm1CZXREZWNpc2lvbihkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiUGVyZm9ybURlY2lzaW9uQmV0SWRCb3giKS52YWx1ZSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIlBlcmZvcm1EZWNpc2lvbldpbm5lckFkZHJlc3NCb3giKS52YWx1ZSkuc2VuZCh7ZnJvbTogdGhpcy5hY2NvdW50LCB2YWx1ZTogdmFsdWVUb0dpdmV9KQoKICAgICAgICB9IGVsc2UgeyBhbGVydCgiSXQgc2VlbXMgbGlrZSB5b3UgYXJlIHRyeWluZyB0byB0cmFuc2ZlciBmdW5kcyB0byB0aGUgd2lubmVyIG9mIHRoZSBiZXQgd2l0aCBhbiBhY2NvdW50IHRoYXQgaXMgbm90IHJlZ2lzdGVyZWQgYXMgYSB0aGUgdGhpcmRwYXJ0eSBpbiB0aGlzIGJldC4gUGxlYXNlIHRyeSBjaGFuZ2luZyB0byBhbiBhZGRyZXNzIHJlZ2lzdGVyZWQgKGlmIGl0IGlzIG5vdCBhbHJlYWR5IHRoZSBjYXNlKSBBTkQgVEhFTiByZWxvYWQgdGhlIHBhZ2UgOikiKX0KICAgICAgICAKCiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIlBlcmZvcm1EZWNpc2lvbkJldElkQm94IikudmFsdWUgPSAiIjsgCiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIlBlcmZvcm1EZWNpc2lvbldpbm5lckFkZHJlc3NCb3giKS52YWx1ZSA9ICIiOwogICAgICB9IGVsc2UgewogICAgICAgIGFsZXJ0KCJTb21lIGluZm9ybWF0aW9ucyBhcmUgbWlzc2luZyBvciB5b3UgaW5wdXR0ZWQgd3JvbmcgaW5mb3JtYXRpb24iKTsKICAgICAgfQogICAgfSwKCiAgICBhc3luYyBpbXBvcnRTbWFydENvbnRyYWN0KCl7CgogICAgICBhd2FpdCB3aW5kb3cuZXRoZXJldW0uc2VuZCgnZXRoX3JlcXVlc3RBY2NvdW50cycpOwogICAgICAKICAgICAgY29uc3Qgd2ViMyA9IG5ldyBXZWIzKHdpbmRvdy5ldGhlcmV1bSk7CgogICAgICBjb25zdCBhY2NvdW50cyA9IGF3YWl0IHdlYjMuZXRoLmdldEFjY291bnRzKCk7CiAgICAgIHRoaXMuYWNjb3VudCA9IGFjY291bnRzWzBdCiAgICAgIAogICAgICBjb25zdCBuZXRJZCA9IHdpbmRvdy5ldGhlcmV1bS5uZXR3b3JrVmVyc2lvbjsKCiAgICAgIGNvbnNvbGUubG9nKG5ldElkKQogICAgICAKICAgICAgY29uc3QgYmV0dGluZ0NvbnRyYWN0RGF0YSA9IEJldHRpbmdDb250cmFjdC5uZXR3b3Jrc1tuZXRJZF07CgogICAgICBjb25zb2xlLmxvZyhiZXR0aW5nQ29udHJhY3REYXRhKQogICAgCiAgICAgIGlmKGJldHRpbmdDb250cmFjdERhdGEpewogICAgICAgIGNvbnN0IGZpbmFsQmV0dGluZ0NvbnRyYWN0ID0gbmV3IHdlYjMuZXRoLkNvbnRyYWN0KEJldHRpbmdDb250cmFjdC5hYmksIGJldHRpbmdDb250cmFjdERhdGEuYWRkcmVzcyk7CiAgICAgICAgdGhpcy5iZXR0aW5nQ29udHJhY3RBYmkgPSBmaW5hbEJldHRpbmdDb250cmFjdDsKICAgICAgfWVsc2V7CiAgICAgICAgd2luZG93LmFsZXJ0KCdCZXR0aW5nIHNtYXJ0IGNvbnRyYWN0IGhhcyBub3QgYmVlbiBkZXBsb3llZCB0byBkZXRlY3RlZCBuZXR3b3JrJyk7CiAgICAgIH0KCiAgICB9LAoKICAgIAogIH0KCn0K"},{"version":3,"sources":["Perfrom-Bet-Decision.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA","file":"Perfrom-Bet-Decision.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n  <h1>Want to transfer funds to winner ?</h1><br><br>\n\n  <label for=\"PerformDecisionBetIdBox\">Bet to perform decision on:</label><br>\n  <input class=\"backGroundColor\" type=\"number\" id=\"PerformDecisionBetIdBox\" name=\"PerformDecisionBetIdBox\" placeholder=\"Id of the bet\"><br><br>\n\n  <label for=\"PerformDecisionWinnerAddressBox\">Winner  address:</label><br>\n  <input class=\"backGroundColor\" type=\"text\" id=\"PerformDecisionWinnerAddressBox\" name=\"PerformDecisionWinnerAddressBox\" placeholder=\"Winner's public address\"><br><br>\n\n  <button v-on:click= \"performBetDecision\" class=\"backGroundColor button\">Perform Decision</button>\n\n  </div>\n</template>\n\n<script>\n\nimport Web3 from 'web3';\nimport BettingContract from '../abis/BettingContract.json';\n\nexport default {\n\n  data() {\n    return {\n      account: '0x0',\n      admin: '0x0',\n      currentBalance: 0,\n      bettingContractAbi: 0,\n    };\n  },\n\n  async beforeMount(){\n     await this.importSmartContract();\n  },  \n\n\n  methods:{\n    performBetDecision: async function() {\n\n      const BN = require('bn.js');\n\n      if(document.getElementById(\"PerformDecisionBetIdBox\").value != \"\" && document.getElementById(\"PerformDecisionWinnerAddressBox\").value != \"\" && document.getElementById(\"PerformDecisionBetIdBox\").value >= 0) {\n\n        var thirdParty;\n        await this.bettingContractAbi.methods.getBetThirdParty(document.getElementById(\"PerformDecisionBetIdBox\").value).call().then(result => thirdParty = result);\n\n        if(this.account === thirdParty){\n\n          var valueToGive;\n          await this.bettingContractAbi.methods.getBetAmount(document.getElementById(\"PerformDecisionBetIdBox\").value).call().then(function(result) {valueToGive = new BN(result).mul(new BN(2))});\n      \n          \n          this.bettingContractAbi.methods.performBetDecision(document.getElementById(\"PerformDecisionBetIdBox\").value, document.getElementById(\"PerformDecisionWinnerAddressBox\").value).send({from: this.account, value: valueToGive})\n\n        } else { alert(\"It seems like you are trying to transfer funds to the winner of the bet with an account that is not registered as a the thirdparty in this bet. Please try changing to an address registered (if it is not already the case) AND THEN reload the page :)\")}\n        \n\n        document.getElementById(\"PerformDecisionBetIdBox\").value = \"\"; \n        document.getElementById(\"PerformDecisionWinnerAddressBox\").value = \"\";\n      } else {\n        alert(\"Some informations are missing or you inputted wrong information\");\n      }\n    },\n\n    async importSmartContract(){\n\n      await window.ethereum.send('eth_requestAccounts');\n      \n      const web3 = new Web3(window.ethereum);\n\n      const accounts = await web3.eth.getAccounts();\n      this.account = accounts[0]\n      \n      const netId = window.ethereum.networkVersion;\n\n      console.log(netId)\n      \n      const bettingContractData = BettingContract.networks[netId];\n\n      console.log(bettingContractData)\n    \n      if(bettingContractData){\n        const finalBettingContract = new web3.eth.Contract(BettingContract.abi, bettingContractData.address);\n        this.bettingContractAbi = finalBettingContract;\n      }else{\n        window.alert('Betting smart contract has not been deployed to detected network');\n      }\n\n    },\n\n    \n  }\n\n}\n</script>\n\n<style>\n\n</style>"]}]}