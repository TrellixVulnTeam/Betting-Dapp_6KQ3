{"remainingRequest":"/Users/tombeck/Desktop/SmartContracts/BettingContractProject/bettingcontract-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tombeck/Desktop/SmartContracts/BettingContractProject/bettingcontract-frontend/src/components/Approve-a-Bet.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tombeck/Desktop/SmartContracts/BettingContractProject/bettingcontract-frontend/src/components/Approve-a-Bet.vue","mtime":1628858381212},{"path":"/Users/tombeck/Desktop/SmartContracts/BettingContractProject/bettingcontract-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tombeck/Desktop/SmartContracts/BettingContractProject/bettingcontract-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tombeck/Desktop/SmartContracts/BettingContractProject/bettingcontract-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tombeck/Desktop/SmartContracts/BettingContractProject/bettingcontract-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgV2ViMyBmcm9tICd3ZWIzJzsKaW1wb3J0IEJldHRpbmdDb250cmFjdCBmcm9tICcuLi9hYmlzL0JldHRpbmdDb250cmFjdC5qc29uJzsKCmV4cG9ydCBkZWZhdWx0IHsKCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBhY2NvdW50OiAnMHgwJywKICAgICAgYWRtaW46ICcweDAnLAogICAgICBjdXJyZW50QmFsYW5jZTogMCwKICAgICAgYmV0dGluZ0NvbnRyYWN0QWJpOiAwLAogICAgfTsKICB9LAoKICBhc3luYyBiZWZvcmVNb3VudCgpewogICAgIGF3YWl0IHRoaXMuaW1wb3J0U21hcnRDb250cmFjdCgpOwogIH0sCiAgCgogIG1ldGhvZHM6IHsKCiAgICBhcHByb3ZlQmV0OiBhc3luYyBmdW5jdGlvbigpIHsKCiAgICAgIGlmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdBcHByb3ZlQmV0Qm94JykudmFsdWUgIT0gIiIgJiYgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ0FwcHJvdmVCZXRCb3gnKS52YWx1ZSA+PSAwKXsKCiAgICAgICAgCgogICAgICAgIHZhciBmaXJzdEJldHRlcjsKICAgICAgICBhd2FpdCB0aGlzLmJldHRpbmdDb250cmFjdEFiaS5tZXRob2RzLmdldEJldEZpcnN0QmV0dGVyKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJBcHByb3ZlQmV0Qm94IikudmFsdWUpLmNhbGwoKS50aGVuKHJlc3VsdCA9PiBmaXJzdEJldHRlciA9IHJlc3VsdCk7CgogICAgICAgIHZhciBzZWNvbmRCZXR0ZXI7CiAgICAgICAgYXdhaXQgdGhpcy5iZXR0aW5nQ29udHJhY3RBYmkubWV0aG9kcy5nZXRCZXRTZWNvbmR0QmV0dGVyKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJBcHByb3ZlQmV0Qm94IikudmFsdWUpLmNhbGwoKS50aGVuKHJlc3VsdCA9PiBzZWNvbmRCZXR0ZXIgPSByZXN1bHQpOwoKICAgICAgICB2YXIgdGhpcmRQYXJ0eTsKICAgICAgICBhd2FpdCB0aGlzLmJldHRpbmdDb250cmFjdEFiaS5tZXRob2RzLmdldEJldFRoaXJkUGFydHkoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIkFwcHJvdmVCZXRCb3giKS52YWx1ZSkuY2FsbCgpLnRoZW4ocmVzdWx0ID0+IHRoaXJkUGFydHkgPSByZXN1bHQpOwoKICAgICAgICBpZih0aGlzLmFjY291bnQgPT09IGZpcnN0QmV0dGVyIHx8IHRoaXMuYWNjb3VudCA9PT0gc2Vjb25kQmV0dGVyIHx8IHRoaXMuYWNjb3VudCA9PT0gdGhpcmRQYXJ0eSkgewoKICAgICAgICAgIHRoaXMuYmV0dGluZ0NvbnRyYWN0QWJpLm1ldGhvZHMuYXBwcm92ZUJldChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnQXBwcm92ZUJldEJveCcpLnZhbHVlKS5zZW5kKHtmcm9tOiAiIit0aGlzLmFjY291bnR9KTsKICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdBcHByb3ZlQmV0Qm94JykudmFsdWUgPSAiIjsKCiAgICAgICAgfSBlbHNlIHsgYWxlcnQoIkl0IHNlZW1zIGxpa2UgeW91IGFyZSB0cnlpbmcgdG8gYXBwcm92ZSBhIGJldCB3aXRoIGFuIGFkZHJlc3MgdGhhdCBpcyBub3QgcmVnaXN0ZXJlZCBpbiB0aGlzIGJldCEgUGxlYXNlIHRyeSBjaGFuZ2luZyB0byBhbiBhZGRyZXNzIHJlZ2lzdGVyZWQgKGlmIGl0IGlzIG5vdCBhbHJlYWR5IHRoZSBjYXNlKSBBTkQgVEhFTiByZWxvYWQgdGhlIHBhZ2UgOikiKX0KCiAgICAgIH0gZWxzZSB7CgogICAgICAgIGFsZXJ0KCdTb21lIGluZm9ybWF0aW9ucyBhcmUgbWlzc2luZyBvciB5b3UgaW5wdXR0ZWQgd3JvbmcgaW5mb3JtYXRpb24nKTsKCiAgICAgIH0KCiAgICB9LAoKICAgIGFzeW5jIGltcG9ydFNtYXJ0Q29udHJhY3QoKXsKCiAgICAgIGF3YWl0IHdpbmRvdy5ldGhlcmV1bS5zZW5kKCdldGhfcmVxdWVzdEFjY291bnRzJyk7CiAgICAgIAogICAgICBjb25zdCB3ZWIzID0gbmV3IFdlYjMod2luZG93LmV0aGVyZXVtKTsKCiAgICAgIGNvbnN0IGFjY291bnRzID0gYXdhaXQgd2ViMy5ldGguZ2V0QWNjb3VudHMoKTsKICAgICAgdGhpcy5hY2NvdW50ID0gYWNjb3VudHNbMF0KICAgICAgCiAgICAgIGNvbnN0IG5ldElkID0gd2luZG93LmV0aGVyZXVtLm5ldHdvcmtWZXJzaW9uOwoKICAgICAgY29uc29sZS5sb2cobmV0SWQpCiAgICAgIAogICAgICBjb25zdCBiZXR0aW5nQ29udHJhY3REYXRhID0gQmV0dGluZ0NvbnRyYWN0Lm5ldHdvcmtzW25ldElkXTsKCiAgICAgIGNvbnNvbGUubG9nKGJldHRpbmdDb250cmFjdERhdGEpCiAgICAKICAgICAgaWYoYmV0dGluZ0NvbnRyYWN0RGF0YSl7CiAgICAgICAgY29uc3QgZmluYWxCZXR0aW5nQ29udHJhY3QgPSBuZXcgd2ViMy5ldGguQ29udHJhY3QoQmV0dGluZ0NvbnRyYWN0LmFiaSwgYmV0dGluZ0NvbnRyYWN0RGF0YS5hZGRyZXNzKTsKICAgICAgICB0aGlzLmJldHRpbmdDb250cmFjdEFiaSA9IGZpbmFsQmV0dGluZ0NvbnRyYWN0OwogICAgICB9ZWxzZXsKICAgICAgICB3aW5kb3cuYWxlcnQoJ0JldHRpbmcgc21hcnQgY29udHJhY3QgaGFzIG5vdCBiZWVuIGRlcGxveWVkIHRvIGRldGVjdGVkIG5ldHdvcmsnKTsKICAgICAgfQoKICAgIH0sCgogICAgCiAgfQoKfQo="},{"version":3,"sources":["Approve-a-Bet.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA","file":"Approve-a-Bet.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div> \n    <h1>Want to approve a bet ?</h1><br><br>\n\n    <label for=\"ApproveBetBox\">Approve a bet:</label><br>\n    <input class=\"backGroundColor\" type=\"number\" id=\"ApproveBetBox\" name=\"ApproveBetBox\" placeholder=\"Id of the bet\"><br><br>\n    \n\n    <button class=\"backGroundColor button\" v-on:click= \"approveBet\">Approve Bet</button>\n  </div>\n</template>\n\n<script>\n\nimport Web3 from 'web3';\nimport BettingContract from '../abis/BettingContract.json';\n\nexport default {\n\n\n  data() {\n    return {\n      account: '0x0',\n      admin: '0x0',\n      currentBalance: 0,\n      bettingContractAbi: 0,\n    };\n  },\n\n  async beforeMount(){\n     await this.importSmartContract();\n  },\n  \n\n  methods: {\n\n    approveBet: async function() {\n\n      if(document.getElementById('ApproveBetBox').value != \"\" && document.getElementById('ApproveBetBox').value >= 0){\n\n        \n\n        var firstBetter;\n        await this.bettingContractAbi.methods.getBetFirstBetter(document.getElementById(\"ApproveBetBox\").value).call().then(result => firstBetter = result);\n\n        var secondBetter;\n        await this.bettingContractAbi.methods.getBetSecondtBetter(document.getElementById(\"ApproveBetBox\").value).call().then(result => secondBetter = result);\n\n        var thirdParty;\n        await this.bettingContractAbi.methods.getBetThirdParty(document.getElementById(\"ApproveBetBox\").value).call().then(result => thirdParty = result);\n\n        if(this.account === firstBetter || this.account === secondBetter || this.account === thirdParty) {\n\n          this.bettingContractAbi.methods.approveBet(document.getElementById('ApproveBetBox').value).send({from: \"\"+this.account});\n          document.getElementById('ApproveBetBox').value = \"\";\n\n        } else { alert(\"It seems like you are trying to approve a bet with an address that is not registered in this bet! Please try changing to an address registered (if it is not already the case) AND THEN reload the page :)\")}\n\n      } else {\n\n        alert('Some informations are missing or you inputted wrong information');\n\n      }\n\n    },\n\n    async importSmartContract(){\n\n      await window.ethereum.send('eth_requestAccounts');\n      \n      const web3 = new Web3(window.ethereum);\n\n      const accounts = await web3.eth.getAccounts();\n      this.account = accounts[0]\n      \n      const netId = window.ethereum.networkVersion;\n\n      console.log(netId)\n      \n      const bettingContractData = BettingContract.networks[netId];\n\n      console.log(bettingContractData)\n    \n      if(bettingContractData){\n        const finalBettingContract = new web3.eth.Contract(BettingContract.abi, bettingContractData.address);\n        this.bettingContractAbi = finalBettingContract;\n      }else{\n        window.alert('Betting smart contract has not been deployed to detected network');\n      }\n\n    },\n\n    \n  }\n\n}\n</script>\n\n<style>\n\n\n</style>"]}]}